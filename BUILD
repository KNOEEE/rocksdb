# Modified from http://blog.mobileink.com/2018/05/bazel-genrule-patching-external-repo.html
#               https://github.com/smyte/smyte-db/blob/master/third_party/rocksdb.BUILD

licenses(["notice"])
package(default_visibility = ["//visibility:public"])

genrule(
    name = "build_version",
    srcs = glob([".git/**/*"]) + [
        "util/build_version.cc.in",
    ],
    outs = [
        "util/build_version.cc",
    ],
    # `git rev-parse HEAD` returns the SHA, but it does not work in all the environments
    # when combined with bazel sandboxing
    # see Makefile
    cmd = "GIT_DIR=.git; " +
        "GIT_SHA=$$(cat $$GIT_DIR/HEAD | cut -d \" \" -f 2 | xargs -I {} cat $$GIT_DIR/{}); " +
        "sed -e s/@GIT_SHA@/$$GIT_SHA/ -e s/@GIT_DATE_TIME@/$$(date +%F)/ -e s/@GIT_MOD@/1/ " +
        "util/build_version.cc.in >> $(@)",
)

cc_library(
    name = "rocksdb",
    srcs = 
    glob([
        "include/rocksdb/*.h",
        
    ]) +
    [
        ":build_version",
        #"cache/cache_bench.cc",
        "cache/secondary_cache.cc",
        "cache/sharded_cache.cc",
        #"cache/cache_bench_tool.cc",
        "cache/secondary_cache_adapter.cc",
        "cache/lru_cache.cc",
        "cache/cache.cc",
        "cache/cache_helpers.cc",
        "cache/compressed_secondary_cache.cc",
        "cache/cache_reservation_manager.cc",
        "cache/charged_cache.cc",
        "cache/tiered_secondary_cache.cc",
        "cache/cache_entry_roles.cc",
        "cache/cache_key.cc",
        "cache/clock_cache.cc",
        #"db/range_del_aggregator_bench.cc",
        "db/c.cc",
        "db/error_handler.cc",
        "db/memtable_list.cc",
        # "db/forward_iterator_bench.cc",
        "db/log_writer.cc",
        "db/event_helpers.cc",
        "db/repair.cc",
        "db/write_batch_base.cc",
        "db/write_stall_stats.cc",
        "db/external_sst_file_ingestion_job.cc",
        "db/column_family.cc",
        "db/merge_helper.cc",
        "db/blob/blob_file_builder.cc",
        "db/blob/blob_file_meta.cc",
        "db/blob/blob_log_format.cc",
        "db/blob/blob_log_writer.cc",
        "db/blob/blob_fetcher.cc",
        "db/blob/prefetch_buffer_collection.cc",
        "db/blob/blob_garbage_meter.cc",
        "db/blob/blob_file_cache.cc",
        "db/blob/blob_file_garbage.cc",
        "db/blob/blob_source.cc",
        "db/blob/blob_log_sequential_reader.cc",
        "db/blob/blob_file_addition.cc",
        "db/blob/blob_file_reader.cc",
        "db/blob/blob_contents.cc",
        "db/transaction_log_impl.cc",
        "db/write_controller.cc",
        "db/table_properties_collector.cc",
        "db/version_edit.cc",
        "db/wal_manager.cc",
        "db/write_batch.cc",
        "db/range_tombstone_fragmenter.cc",
        "db/seqno_to_time_mapping.cc",
        "db/flush_scheduler.cc",
        "db/range_del_aggregator.cc",
        "db/wide/wide_column_serialization.cc",
        "db/wide/wide_columns_helper.cc",
        "db/wide/wide_columns.cc",
        "db/compaction/compaction_service_job.cc",
        "db/compaction/compaction_picker_fifo.cc",
        "db/compaction/compaction_iterator.cc",
        "db/compaction/compaction_outputs.cc",
        "db/compaction/subcompaction_state.cc",
        "db/compaction/compaction_job.cc",
        "db/compaction/compaction_picker_universal.cc",
        "db/compaction/sst_partitioner.cc",
        "db/compaction/compaction_picker.cc",
        "db/compaction/compaction_picker_level.cc",
        "db/compaction/compaction.cc",
        "db/compaction/compaction_state.cc",
        "db/forward_iterator.cc",
        "db/db_iter.cc",
        "db/flush_job.cc",
        "db/wal_edit.cc",
        "db/version_builder.cc",
        "db/version_set.cc",
        "db/arena_wrapped_db_iter.cc",
        "db/attribute_group_iterator_impl.cc",
        "db/table_cache.cc",
        "db/snapshot_impl.cc",
        "db/experimental.cc",
        "db/merge_operator.cc",
        "db/manifest_ops.cc",
        "db/db_test2.cc",
        "db/logs_with_prep_tracker.cc",
        "db/version_edit_handler.cc",
        "db/memtable.cc",
        "db/file_indexer.cc",
        "db/write_thread.cc",
        "db/builder.cc",
        "db/periodic_task_scheduler.cc",
        "db/internal_stats.cc",
        "db/log_reader.cc",
        "db/malloc_stats.cc",
        "db/db_test_util.cc",
        "db/db_impl/db_impl_experimental.cc",
        "db/db_impl/db_impl_follower.cc",
        "db/db_impl/compacted_db_impl.cc",
        "db/db_impl/db_impl_debug.cc",
        "db/db_impl/db_impl.cc",
        "db/db_impl/db_impl_files.cc",
        "db/db_impl/db_impl_readonly.cc",
        "db/db_impl/db_impl_open.cc",
        "db/db_impl/db_impl_write.cc",
        "db/db_impl/db_impl_secondary.cc",
        "db/db_impl/db_impl_compaction_flush.cc",
        "db/dbformat.cc",
        "db/output_validator.cc",
        "db/convenience.cc",
        "db/import_column_family_job.cc",
        "db/db_info_dumper.cc",
        "db/coalescing_iterator.cc",
        "db/db_with_timestamp_test_util.cc",
        "db/trim_history_scheduler.cc",
        "db/db_filesnapshot.cc",
        "env/file_system.cc",
        "env/env_chroot.cc",
        "env/fs_on_demand.cc",
        "env/file_system_tracer.cc",
        "env/unique_id_gen.cc",
        "env/fs_posix.cc",
        "env/io_posix.cc",
        "env/fs_remap.cc",
        "env/mock_env.cc",
        "env/env.cc",
        "env/composite_env.cc",
        "env/env_posix.cc",
        "env/env_encryption.cc",
        "file/delete_scheduler.cc",
        "file/line_file_reader.cc",
        "file/filename.cc",
        "file/sst_file_manager_impl.cc",
        "file/file_util.cc",
        "file/sequence_file_reader.cc",
        "file/readahead_raf.cc",
        "file/writable_file_writer.cc",
        "file/read_write_util.cc",
        "file/random_access_file_reader.cc",
        "file/file_prefetch_buffer.cc",
        "logging/auto_roll_logger.cc",
        "logging/event_logger.cc",
        "logging/log_buffer.cc",
        "memory/memkind_kmem_allocator.cc",
        "memory/concurrent_arena.cc",
        "memory/jemalloc_nodump_allocator.cc",
        "memory/arena.cc",
        "memory/memory_allocator.cc",
        "memtable/alloc_tracker.cc",
        #"memtable/memtablerep_bench.cc",
        "memtable/wbwi_memtable.cc",
        "memtable/vectorrep.cc",
        "memtable/hash_linklist_rep.cc",
        "memtable/hash_skiplist_rep.cc",
        "memtable/write_buffer_manager.cc",
        "memtable/skiplistrep.cc",
        "monitoring/iostats_context.cc",
        "monitoring/in_memory_stats_history.cc",
        "monitoring/thread_status_util_debug.cc",
        "monitoring/histogram_windowing.cc",
        "monitoring/perf_context.cc",
        "monitoring/thread_status_updater_debug.cc",
        "monitoring/thread_status_impl.cc",
        "monitoring/persistent_stats_history.cc",
        "monitoring/instrumented_mutex.cc",
        "monitoring/histogram.cc",
        "monitoring/thread_status_util.cc",
        "monitoring/statistics.cc",
        "monitoring/thread_status_updater.cc",
        "monitoring/perf_level.cc",
        "options/options_helper.cc",
        "options/cf_options.cc",
        "options/customizable.cc",
        "options/options_parser.cc",
        "options/configurable.cc",
        "options/options.cc",
        "options/db_options.cc",
        "options/offpeak_time_info.cc",
        "port/stack_trace.cc",
        "port/mmap.cc",
        # "port/win/env_win.cc",
        # "port/win/env_default.cc",
        # "port/win/port_win.cc",
        # "port/win/win_logger.cc",
        # "port/win/xpress_win.cc",
        # "port/win/io_win.cc",
        # "port/win/win_thread.cc",
        # "port/win/win_jemalloc.cc",
        "port/port_posix.cc",
        "table/sst_file_writer.cc",
        "table/block_based/block_prefetcher.cc",
        "table/block_based/index_builder.cc",
        "table/block_based/hash_index_reader.cc",
        "table/block_based/block_based_table_iterator.cc",
        "table/block_based/block_prefix_index.cc",
        "table/block_based/block_cache.cc",
        "table/block_based/block_based_table_builder.cc",
        "table/block_based/binary_search_index_reader.cc",
        "table/block_based/parsed_full_filter_block.cc",
        "table/block_based/block_builder.cc",
        "table/block_based/full_filter_block.cc",
        "table/block_based/data_block_hash_index.cc",
        "table/block_based/uncompression_dict_reader.cc",
        "table/block_based/index_reader_common.cc",
        "table/block_based/block_based_table_factory.cc",
        "table/block_based/flush_block_policy.cc",
        "table/block_based/partitioned_index_reader.cc",
        "table/block_based/reader_common.cc",
        "table/block_based/filter_policy.cc",
        "table/block_based/partitioned_index_iterator.cc",
        "table/block_based/block_based_table_reader.cc",
        "table/block_based/block.cc",
        "table/block_based/filter_block_reader_common.cc",
        "table/block_based/data_block_footer.cc",
        "table/block_based/partitioned_filter_block.cc",
        "table/iterator.cc",
        "table/sst_file_dumper.cc",
        "table/cuckoo/cuckoo_table_reader.cc",
        "table/cuckoo/cuckoo_table_builder.cc",
        "table/cuckoo/cuckoo_table_factory.cc",
        "table/compaction_merging_iterator.cc",
        "table/plain/plain_table_key_coding.cc",
        "table/plain/plain_table_reader.cc",
        "table/plain/plain_table_bloom.cc",
        "table/plain/plain_table_builder.cc",
        "table/plain/plain_table_index.cc",
        "table/plain/plain_table_factory.cc",
        "table/sst_file_reader.cc",
        "table/mock_table.cc",
        "table/adaptive/adaptive_table_factory.cc",
        "table/get_context.cc",
        "table/format.cc",
        "table/table_factory.cc",
        "table/persistent_cache_helper.cc",
        "table/unique_id.cc",
        "table/meta_blocks.cc",
        "table/merging_iterator.cc",
        "table/table_properties.cc",
        "table/two_level_iterator.cc",
        #"table/table_reader_bench.cc",
        "table/block_fetcher.cc",
        "test_util/testutil.cc",
        "test_util/sync_point.cc",
        "test_util/transaction_test_util.cc",
        "test_util/mock_time_env.cc",
        "test_util/sync_point_impl.cc",
        "test_util/testharness.cc",
        "test_util/secondary_cache_test_util.cc",
        # "tools/ldb_tool.cc",
        # "tools/ldb_cmd.cc",
        # "tools/db_repl_stress.cc",
        # "tools/sst_dump_tool.cc",
        # "tools/io_tracer_parser_tool.cc",
        # "tools/dump/rocksdb_dump.cc",
        # "tools/dump/rocksdb_undump.cc",
        # "tools/dump/db_dump_tool.cc",
        # "tools/ldb.cc",
        # "tools/trace_analyzer_tool.cc",
        # "tools/blob_dump.cc",
        # "tools/sst_dump.cc",
        # "tools/block_cache_analyzer/block_cache_trace_analyzer_tool.cc",
        # "tools/block_cache_analyzer/block_cache_trace_analyzer.cc",
        # "tools/write_stress.cc",
        #"tools/db_bench_tool.cc",
        #"tools/simulated_hybrid_file_system.cc",
        #"tools/io_tracer_parser.cc",
        #"tools/db_bench.cc",
        #"tools/trace_analyzer.cc",
        "trace_replay/trace_record_result.cc",
        "trace_replay/trace_record_handler.cc",
        "trace_replay/io_tracer.cc",
        "trace_replay/block_cache_tracer.cc",
        "trace_replay/trace_replay.cc",
        "trace_replay/trace_record.cc",
        "util/dynamic_bloom.cc",
        "util/status.cc",
        "util/cleanable.cc",
        "util/async_file_reader.cc",
        "util/comparator.cc",
        "util/crc32c_arm64.cc",
        "util/compression_context_cache.cc",
        "util/slice.cc",
       # "util/filter_bench.cc",
        "util/compaction_job_stats_impl.cc",
        "util/compression.cc",
        "util/write_batch_util.cc",
        "util/stderr_logger.cc",
        "util/crc32c.cc",
        "util/murmurhash.cc",
        "util/rate_limiter.cc",
        "util/concurrent_task_limiter_impl.cc",
        "util/thread_local.cc",
        "util/udt_util.cc",
        "util/coding.cc",
        "util/string_util.cc",
        "util/data_structure.cc",
        "util/random.cc",
        "util/ribbon_config.cc",
        "util/xxhash.cc",
        #"util/log_write_bench.cc",
        "util/hash.cc",
        "util/file_checksum_helper.cc",
        "util/threadpool_imp.cc",
        "utilities/write_batch_with_index/write_batch_with_index_internal.cc",
        "utilities/write_batch_with_index/write_batch_with_index.cc",
        "utilities/checkpoint/checkpoint_impl.cc",
        "utilities/types_util.cc",
        "utilities/backup/backup_engine.cc",
        "utilities/options/options_util.cc",
        "utilities/debug.cc",
        "utilities/wal_filter.cc",
        "utilities/env_mirror.cc",
        "utilities/transactions/snapshot_checker.cc",
        "utilities/transactions/optimistic_transaction_db_impl.cc",
        "utilities/transactions/pessimistic_transaction_db.cc",
        "utilities/transactions/transaction_db_mutex_impl.cc",
        "utilities/transactions/pessimistic_transaction.cc",
        "utilities/transactions/write_unprepared_txn_db.cc",
        "utilities/transactions/transaction_util.cc",
        "utilities/transactions/write_unprepared_txn.cc",
        "utilities/transactions/write_prepared_txn_db.cc",
        "utilities/transactions/write_prepared_txn.cc",
        "utilities/transactions/optimistic_transaction.cc",
        "utilities/transactions/lock/lock_manager.cc",
        "utilities/transactions/lock/range/range_tree/range_tree_lock_tracker.cc",
        "utilities/transactions/lock/range/range_tree/lib/standalone_port.cc",
        "utilities/transactions/lock/range/range_tree/lib/locktree/lock_request.cc",
        "utilities/transactions/lock/range/range_tree/lib/locktree/concurrent_tree.cc",
        "utilities/transactions/lock/range/range_tree/lib/locktree/keyrange.cc",
        "utilities/transactions/lock/range/range_tree/lib/locktree/manager.cc",
        "utilities/transactions/lock/range/range_tree/lib/locktree/wfg.cc",
        "utilities/transactions/lock/range/range_tree/lib/locktree/treenode.cc",
        "utilities/transactions/lock/range/range_tree/lib/locktree/txnid_set.cc",
        "utilities/transactions/lock/range/range_tree/lib/locktree/range_buffer.cc",
        "utilities/transactions/lock/range/range_tree/lib/locktree/locktree.cc",
        "utilities/transactions/lock/range/range_tree/lib/util/memarena.cc",
        "utilities/transactions/lock/range/range_tree/lib/util/dbt.cc",
        "utilities/transactions/lock/range/range_tree/range_tree_lock_manager.cc",
        "utilities/transactions/lock/point/point_lock_tracker.cc",
        "utilities/transactions/lock/point/point_lock_manager.cc",
        "utilities/transactions/transaction_base.cc",
        "utilities/merge_operators/uint64add.cc",
        "utilities/merge_operators/sortlist.cc",
        "utilities/merge_operators/string_append/stringappend2.cc",
        "utilities/merge_operators/string_append/stringappend.cc",
        "utilities/merge_operators/max.cc",
        "utilities/merge_operators/put.cc",
        "utilities/merge_operators/bytesxor.cc",
        "utilities/cassandra/format.cc",
        "utilities/cassandra/cassandra_compaction_filter.cc",
        "utilities/cassandra/test_utils.cc",
        "utilities/cassandra/merge_operator.cc",
        "utilities/compaction_filters.cc",
        "utilities/blob_db/blob_db_impl_filesnapshot.cc",
        "utilities/blob_db/blob_compaction_filter.cc",
        #"utilities/blob_db/blob_dump_tool.cc",
        "utilities/blob_db/blob_db.cc",
        "utilities/blob_db/blob_file.cc",
        "utilities/blob_db/blob_db_impl.cc",
        "utilities/cache_dump_load_impl.cc",
        # "utilities/secondary_index/faiss_ivf_index.cc",
        "utilities/trace/file_trace_reader_writer.cc",
        "utilities/trace/replayer_impl.cc",
        "utilities/leveldb_options/leveldb_options.cc",
        "utilities/counted_fs.cc",
        "utilities/object_registry.cc",
        "utilities/option_change_migration/option_change_migration.cc",
        "utilities/simulator_cache/sim_cache.cc",
        "utilities/simulator_cache/cache_simulator.cc",
        "utilities/fault_injection_env.cc",
        "utilities/agg_merge/agg_merge.cc",
        "utilities/agg_merge/test_agg_merge.cc",
        "utilities/env_timed.cc",
        "utilities/compaction_filters/remove_emptyvalue_compactionfilter.cc",
        "utilities/convenience/info_log_finder.cc",
        "utilities/merge_operators.cc",
        "utilities/ttl/db_ttl_impl.cc",
        #"utilities/persistent_cache/hash_table_bench.cc",
        #"utilities/persistent_cache/persistent_cache_bench.cc",
        "utilities/persistent_cache/block_cache_tier_metadata.cc",
        "utilities/persistent_cache/volatile_tier_impl.cc",
        "utilities/persistent_cache/block_cache_tier_file.cc",
        "utilities/persistent_cache/persistent_cache_tier.cc",
        "utilities/persistent_cache/block_cache_tier.cc",
        "utilities/memory/memory_util.cc",
        "utilities/fault_injection_secondary_cache.cc",
        "utilities/cache_dump_load.cc",
        "utilities/fault_injection_fs.cc",
        "utilities/table_properties_collectors/compact_for_tiering_collector.cc",
        "utilities/table_properties_collectors/compact_on_deletion_collector.cc",

    ],
    hdrs = glob([
        "include/rocksdb/*.h",
        "include/rocksdb/utilities/*.h",
        "port/*.h",
        "cache/*.h", 
        "db/**/*.h", 
        # "db/blob/*.h",
        # "db/compaction/*.h",
        # "db/wide/*.h",
        "env/*.h", "file/*.h", 
        "logging/*.h" ,
        "memory/*.h", 
        "memtable/*.h", "monitoring/*.h", "options/*.h",
        "table/**/*.h", 
        "test_util/*.h" ,
        # #"tools/*.h" 
        "trace_replay/*.h", 
        "util/*.h", 
        "utilities/**/*.h",
    ]),
    includes = [
        # ".",
        "include",
        # "include/rocksdb/utilities",
        #"util",
        # "port",
    ],
    defines = [
        "GFLAGS=gflags",
        "OS_LINUX",
        # "SNAPPY",
        "HAVE_SSE42",
        "HAVE_PCLMUL",
        # "ZLIB",
        # "LZ4",
        # "ZSTD",
        "ROCKSDB_RANGESYNC_PRESENT",
        "ROCKSDB_PTHREAD_ADAPTIVE_MUTEX ",
        "ROCKSDB_AUXV_GETAUXVAL_PRESENT",
        "ROCKSDB_SUPPORT_THREAD_LOCAL",
        "ROCKSDB_PLATFORM_POSIX",
        "ROCKSDB_LIB_IO_POSIX",
        "ROCKSDB_FALLOCATE_PRESENT",
        # "ROCKSDB_MALLOC_USABLE_SIZE",
        "ROCKSDB_SCHED_GETCPU_PRESENT",
        "ROCKSDB_NO_DYNAMIC_EXTENSION",
    ],
    copts = [
      # "-D_GLIBCXX_USE_CXX11_ABI=0", do not add this option, otherwise link would fail and error log said some headers are undefined symbol
        "-fno-omit-frame-pointer",
        "-momit-leaf-frame-pointer",
        "-msse",
        "-msse4.2",
        "-pthread",
        # "-Werror", Make all warnings into errors.
        "-Wsign-compare",
        "-Wshadow",
        "-Wno-unused-parameter",
        "-Wno-unused-variable",
        "-Woverloaded-virtual",
        "-Wnon-virtual-dtor",
        "-Wno-missing-field-initializers",
        "-fno-builtin-memcmp",
        "-std=c++17",
        "-mpclmul",
        "-O2",
    ],
    linkopts = [
        "-lm",
        "-lpthread",
        "-lssp",
    ],
    deps = [
        "@googletest//:gtest",
        "@googletest//:gtest_main",
        # "@snappy//:snappy",
        "@gflags//:gflags",

        # "//external:gflags",
        # "//external:glog",
        # "//external:gtest",
        # "//external:snappy",
        # "//external:zlib",
        # "//external:lz4",
        # "//external:zstd",
    ],
    visibility = ["//visibility:public"],
)

load("@hedron_compile_commands//:refresh_compile_commands.bzl", "refresh_compile_commands")

refresh_compile_commands(
    name = "refresh_compile_commands",
    targets = {
      ":rocksdb": "",
    },
    exclude_headers = "external",
    exclude_external_sources = True,
)

cc_binary(
  name = "demo",
  srcs = [
    "examples/simple_example.cc"
  ],
  deps = [
    ":rocksdb"
  ],
  copts = [
      "-std=c++17",
      # Disable stack protection to deal with 
      # "ld.lld: error: undefined symbol: __stack_chk_guard"
      "-fno-stack-protector",  
  ],
  # linkstatic = True,
)

cc_binary(
  name = "t",
  srcs = [
    # "db/db_io_failure_test.cc",
    "db/error_handler_fs_test.cc",
  ],
  deps = [
    "@googletest//:gtest",
    "@googletest//:gtest_main",
    ":rocksdb"
  ],
  copts = [
      "-std=c++17",
      # Disable stack protection to deal with 
      # "ld.lld: error: undefined symbol: __stack_chk_guard"
      "-fno-stack-protector",  
  ],
  # linkstatic = True,
)

cc_binary(
  name = "easy",
  srcs = [
    # "knoe/easy.cc",
    "knoe/recover_error_test.cpp",
  ],
  deps = [
    ":rocksdb"
  ],
  copts = [
      "-std=c++17",
      # Disable stack protection to deal with 
      # "ld.lld: error: undefined symbol: __stack_chk_guard"
      "-fno-stack-protector",  
  ],
  # linkstatic = True,
)